#!/bin/env python3
from sys import argv
from os.path import expanduser
from random import choices, randint

VOWELS='aeiouy'
AFTER = {}

def letterOf(index):
    return chr(ord('a') + index)


def draw(dictionary):
    letters = list(dictionary.keys())
    weights = list(dictionary.values())
    return choices(letters, weights, k=1)[0]


def tail(previous, n):
    if n <= 0:
        return ''
    else:
        current = draw(AFTER[previous])
        return current + tail(current, n - 1)


# 2D matrix with weights for choosing one letter after another
# First row contains weights for choosing the first letter of a word
with open(expanduser('~/scripts/letter-weights.csv')) as data:
    letters = 'abcdefghijklmnopqrstuvwxyz'
    for (first, line) in zip(iter('^' + letters), data.readlines()):
        AFTER[first] = {}
        for (second, weight) in zip(iter(letters), line.split(',')):
            # Bias weights, so that interlaced consonants and vowels are more likely
            bias = 1.0 if first == '^' or (first in VOWELS) ^ (second in VOWELS) else 0.7
            AFTER[first][second] = float(weight) * bias


length = int(argv[1]) if len(argv) > 1 else randint(4, 10)

if length > 0:
    head = draw(AFTER['^'])
    name = head + tail(head, length - 1)
    print(name.capitalize())
